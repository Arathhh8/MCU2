/*
 * main_app.c
 *
 *  Created on: May 27, 2024
 *      Author: arath
 */


#include"stm32f1xx_hal.h"
#include "main_app.h"
#include <string.h>

#define TRUE 1
#define FALSE 0

void UART2_Init(void);
void Error_handler(void);

UART_HandleTypeDef huart2;


int main(void){

	RCC_OscInitTypeDef osc_init;
	RCC_ClkInitTypeDef clk_init;
	uint8_t msg[100];

	HAL_Init();
	UART2_Init();

	memset(&osc_init, 0, sizeof(osc_init));

	osc_init.OscillatorType = RCC_OSCILLATORTYPE_HSE;
	osc_init.HSEState = RCC_HSE_BYPASS;

	HAL_RCC_OscConfig(&osc_init);
	if(HAL_RCC_OscConfig(&osc_init) != HAL_OK){
		Error_handler();
	}

	clk_init.ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK |
						RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
	clk_init.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
	clk_init.AHBCLKDivider = RCC_SYSCLK_DIV2;
	clk_init.APB1CLKDivider = RCC_HCLK_DIV2;
	clk_init.APB2CLKDivider = RCC_HCLK_DIV2;

	if (HAL_RCC_ClockConfig(&clk_init, FLASH_ACR_LATENCY_0) != HAL_OK){ // 0 wait states of latency
		Error_handler();
	}

	__HAL_RCC_HSI_DISABLE()();

	sprintf(msg, "SYSCLK : %d\r\n", HAL_RCC_GetSysClockFreq());
	HAL_UART_Transmit(&huart2, msg, strlen(msg), HAL_MAX_DELAY);


	while(1);

	return 0;
}



void UART2_Init(void){
	huart2.Instance = USART2;
	huart2.Init.BaudRate = 9600;
	huart2.Init.WordLength = UART_WORDLENGTH_8B;
	huart2.Init.StopBits = UART_STOPBITS_1;
	huart2.Init.Parity = UART_PARITY_NONE;
	huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
	huart2.Init.Mode = UART_MODE_TX_RX;
	//huart2.Init.OverSampling = UART_OVERSAMPLING_16;
	if( HAL_UART_Init(&huart2) != HAL_OK ){
		// There is a problem
		Error_handler();
	}

}

void Error_handler(void){

	while(1);
}


